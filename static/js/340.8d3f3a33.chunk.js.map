{"version":3,"file":"static/js/340.8d3f3a33.chunk.js","mappings":"sLAEaA,GAAUC,E,QAAAA,IAAO,UAAPA,CAAH,mF,SCMPC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OACI,SAACH,EAAD,UACKG,GAKZ,C,kIChBYC,EAAc,SAAC,GAAiB,IAEnCC,EAFkC,EAAdC,QAEDC,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,GAAIC,EAAhB,EAAgBA,OAAhB,OAEzB,2BAEI,qCAAaA,MACb,6BAAMF,OAHDC,EAFgB,IAS7B,OACI,wBACKJ,GAGZ,EC8BD,EAtCiB,WACb,OAA8BM,EAAAA,EAAAA,UAAS,MAAvC,eAAOL,EAAP,KAAgBM,EAAhB,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACI,GAAwCH,EAAAA,EAAAA,UAAS,IAAjD,eAAOI,EAAP,KAAqBC,EAArB,KACIP,GAAOQ,EAAAA,EAAAA,MAAPR,GAyBR,OAxBAS,QAAQC,IAAIV,IAEZW,EAAAA,EAAAA,YAAU,WAENC,EAAAA,EAAAA,aAAiBZ,EAAI,YAAYa,MAAK,SAACC,GAC9BA,EAAIC,QAAQC,QAIjBb,EAAWW,EAAIC,SACfV,EAAU,aAJNA,EAAU,YAKjB,IAAEY,OAAM,SAACC,GACNX,EAAgB,2BAChBF,EAAU,YACVI,QAAQC,IAAIQ,EAAIC,QACnB,GAKJ,GAAE,CAACnB,IAERS,QAAQC,IAAIb,IAGJ,UAACJ,EAAA,EAAD,WACgB,cAAXW,IAA0B,sCACf,aAAXA,IAAyB,SAACT,EAAD,CAAaE,QAASA,IACpC,aAAXO,IAAyB,uBAAIE,MAIxC,C,2GC5CIc,EAAU,mCAEVC,EAAW,gCAEVC,EAAW,mCAAG,6GAGQC,IAAAA,IAAA,UAAaF,EAAb,sBAA2C,CAC5DG,OAAQ,CACPC,QAASL,KALD,cAGPM,EAHO,yBAONA,EAAOC,MAPD,sCASP,IAAIC,MAAM,KAAMT,SATT,yDAAH,qDAaZU,EAAe,mCAAG,WAAMC,GAAN,gGAEKP,IAAAA,IAAA,UAAaF,EAAb,gBAAqC,CACtDG,OAAQ,CACJM,MAAOA,EACVL,QAASL,KALE,cAEVM,EAFU,yBAOTA,EAAOC,MAPE,sCAUV,IAAIC,MAAM,KAAMT,SAVN,yDAAH,sDAcdY,EAAY,mCAAG,WAAM/B,GAAN,4FAAUgC,EAAV,+BAAiB,GAAjB,kBAGOT,IAAAA,IAAA,UAAaF,EAAb,iBAA8BrB,GAA9B,OAAmCgC,GAAQ,CAC5DR,OAAQ,CACPC,QAASL,KALA,cAGRM,EAHQ,yBAOPA,EAAOC,MAPA,sCASR,IAAIC,MAAM,KAAMT,SATR,yDAAH,sDAaNP,EAAM,CACfmB,aAAAA,EACAT,YAAAA,EACAO,gBAAAA,E","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Reviews/ReviewsList.jsx","components/Reviews/Reviews.jsx","services/api.services.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled(\"section\")   `\n    padding: 20px 30px;\n    background-color: aliceblue;\n`","\n// import styled from \"styled-components\";\n\n// const Wrapper = styled(\"section\")   `\n//     padding: 20px 30px;\n// `\nimport { Wrapper } from \"./Container.styled\"\n\nexport const Container = ({ children }) => {\n    return (\n        <Wrapper>\n            {children}\n\n        </Wrapper>\n        \n    )\n}","export const ReviewsList = ({ reviews }) => {\n    \n    const elements = reviews.map(({ content, id, author }) => (\n        \n        <li key={id}>\n           \n            <h4>Author: {author}</h4>\n            <p> { content}</p>\n        </li>)\n        )\n    \n    return (\n        <ul>\n            {elements}\n        </ul>\n    )\n}","import { useState, useEffect } from \"react\";\nimport { API } from \"services/api.services\";\nimport { useParams } from \"react-router-dom\";\nimport { Container } from \"components/Container/Container\";\nimport { ReviewsList } from \"./ReviewsList\";\n\n\n\n const Reviews = () => {\n    const [reviews, setReviews] = useState(null);\n    const [status, setStatus] = useState('idle');\n        const [errorMessage, setErrorMessage] = useState('');\n    const { id } = useParams()\n    console.log(id)\n\n    useEffect(() => {\n\n        API.getMovieById(id, '/reviews').then((res) => {\n            if (!res.results.length) {\n                setStatus('not found')\n                return;\n            }\n            setReviews(res.results)\n            setStatus('resolved')\n        }).catch((err) => {\n            setErrorMessage(\"Oops, smth went wrong..\")\n            setStatus('rejected')\n            console.log(err.message)\n        })\n\n        \n\n\n    }, [id])\n\nconsole.log(reviews)\n\n    return (\n        <Container>\n            {status === 'not found' && <p>No reviews</p>}\n            {status === 'resolved' && <ReviewsList reviews={reviews} />}\n            {status === 'rejected' && <p>{errorMessage}</p>}\n        </Container>\n        \n    )\n }\nexport default Reviews;","import axios from \"axios\";\nconst API_KEY = '6712873235301bd9554e1f93bced51a2';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/' \n\n const getTrending = async() => {\n    \n    try {\n        const result = await axios.get(`${BASE_URL}trending/movie/day`, {\n            params: {\n             api_key: API_KEY\n        }})\n        return result.data;\n    } catch(error) {\n        throw new Error(error.message)\n    }\n}\n\nconst getSearchMovies = async(query) => {\n    try {\n        const result = await axios.get(`${BASE_URL}search/movie`, {\n            params: {\n                query: query,\n             api_key: API_KEY\n        }})\n        return result.data;\n    }\n    catch (error) {\n        throw new Error(error.message)\n    }\n}\n\n const getMovieById = async(id, info = '')  => {\n    \n    try {\n        const result = await axios.get(`${BASE_URL}movie/${id}${info}`, {\n            params: {\n             api_key: API_KEY\n        }})\n        return result.data;\n    } catch(error) {\n        throw new Error(error.message)\n    }\n }\n\nexport const API = {\n    getMovieById,\n    getTrending,\n    getSearchMovies\n }"],"names":["Wrapper","styled","Container","children","ReviewsList","elements","reviews","map","content","id","author","useState","setReviews","status","setStatus","errorMessage","setErrorMessage","useParams","console","log","useEffect","API","then","res","results","length","catch","err","message","API_KEY","BASE_URL","getTrending","axios","params","api_key","result","data","Error","getSearchMovies","query","getMovieById","info"],"sourceRoot":""}