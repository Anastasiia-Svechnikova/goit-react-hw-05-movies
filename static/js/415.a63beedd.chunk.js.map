{"version":3,"file":"static/js/415.a63beedd.chunk.js","mappings":"sLAEaA,GAAUC,E,QAAAA,IAAO,UAAPA,CAAH,0E,SCCPC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OACI,SAACH,EAAD,UACKG,GAKZ,C,+FCRYC,GAAOH,EAAAA,EAAAA,IAAO,KAAPA,CAAH,+NAYHI,GAAWJ,EAAAA,EAAAA,IAAO,KAAPA,CAAH,mNAWTK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,iEAIVO,GAAQP,EAAAA,EAAAA,IAAO,MAAPA,CAAH,yE,SC3BLQ,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAE1BC,EAAWF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,GAAIC,EAApB,EAAoBA,YAApB,OAAsC,SAACZ,EAAD,WAC9D,UAACC,EAAD,CAAYY,GAAE,kBAAaF,GAAMG,MAAO,CAAER,KAAMA,GAAhD,WACI,SAACH,EAAD,CAAOY,IAAG,yCAAoCH,GAAeI,IAAKP,GAAQC,KAC1E,uBAAID,GAAQC,QAH6DC,EAArD,IAM5B,OACI,SAACZ,EAAD,UACKQ,GAGZ,C,qGCcD,UAtBc,WACT,OAA0CU,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MAUlB,OAPAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,cAAkBC,MAAK,SAACC,GACpBN,EAAiBM,EAAIC,QACxB,IAAEC,OAAM,SAACC,GAAOC,QAAQC,IAAIF,EAAIG,QAAS,GAC7C,GAAE,KAIC,2BACI,UAAC,IAAD,YACI,4CACA,SAAC,IAAD,CAAW1B,OAAQa,EAAeZ,KAAOc,EAASY,eAKhE,C,2GC5BIC,EAAU,mCAEVC,EAAW,gCAEVC,EAAW,mCAAG,6GAGQC,IAAAA,IAAA,UAAaF,EAAb,sBAA2C,CAC5DG,OAAQ,CACPC,QAASL,KALD,cAGPM,EAHO,yBAONA,EAAOC,MAPD,sCASP,IAAIC,MAAM,KAAMV,SATT,yDAAH,qDAaZW,EAAe,mCAAG,WAAMC,GAAN,gGAEKP,IAAAA,IAAA,UAAaF,EAAb,gBAAqC,CACtDG,OAAQ,CACJM,MAAOA,EACVL,QAASL,KALE,cAEVM,EAFU,yBAOTA,EAAOC,MAPE,sCAUV,IAAIC,MAAM,KAAMV,SAVN,yDAAH,sDAcda,EAAY,mCAAG,WAAMjC,GAAN,4FAAUkC,EAAV,+BAAiB,GAAjB,kBAGOT,IAAAA,IAAA,UAAaF,EAAb,iBAA8BvB,GAA9B,OAAmCkC,GAAQ,CAC5DR,OAAQ,CACPC,QAASL,KALA,cAGRM,EAHQ,yBAOPA,EAAOC,MAPA,sCASR,IAAIC,MAAM,KAAMV,SATR,yDAAH,sDAaNR,EAAM,CACfqB,aAAAA,EACAT,YAAAA,EACAO,gBAAAA,E","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Movie-list/Movie-list.styled.js","components/Movie-list/Movie-list.jsx","pages/Home.jsx","services/api.services.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled(\"section\")   `\n    padding: 20px 30px;\n    text-align: center;\n`","\nimport { Wrapper } from \"./Container.styled\"\n\nexport const Container = ({ children }) => {\n    return (\n        <Wrapper>\n            {children}\n\n        </Wrapper>\n        \n    )\n}","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const List = styled(\"ul\")`\nmargin-left: auto;\nmargin-right: auto;\n\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr 1fr 1fr;\ngrid-auto-flow: row;\ntext-align: center;\ngap: 10px;\n    padding: 0;\n    list-style: none;\n`\n export const ListItem = styled('li')`\n\n    width: 100%;\n    padding-top: 5%;\n    text-align: center;\n    transition: all 300ms ease-in-out;\n    &:hover{\n\n         box-shadow: 0 0 23px 2px rgba(120,40,40,0.32);\n    }\n`\nexport const StyledLink = styled(Link)`\ncolor: inherit;\ntext-decoration: none;\n`\nexport const Image = styled('img')`\ndisplay: block;\nmargin: 0 auto;\nwidth: 170px;\n`","import { ListItem, List, StyledLink, Image } from \"./Movie-list.styled\"\n\n\nexport const MovieList = ({ movies, from }) => {\n\n    const elements = movies.map(({ name, title, id, poster_path }) => <ListItem key={id}>\n        <StyledLink to={`/movies/${id}`} state={{ from: from }} >\n            <Image src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={name || title} />\n            <p>{name || title}</p></StyledLink>       \n    </ListItem>)\n    \n    return (\n        <List>\n            {elements}\n        </List>\n    )\n}\n","\nimport { useEffect, useState } from \"react\"\nimport { useLocation } from \"react-router-dom\";\nimport { API } from \"services/api.services\";\nimport { Container } from \"components/Container/Container\";\nimport { MovieList } from \"components/Movie-list/Movie-list\";\n\n\n const Home = () => {\n     const [trendingFilms, setTrendingFilms] = useState([])\n     const location = useLocation();\n    //  console.log(location)\n     \n    useEffect(() => {\n        API.getTrending().then((res) => {\n            setTrendingFilms(res.results)\n        }).catch((err)=>{console.log(err.message)})\n    }, [])\n\n\n    return (\n        <main>\n            <Container>\n                <h1>Trending Today</h1>\n                <MovieList movies={trendingFilms} from={ location.pathname} />\n            </Container>\n            \n        </main>\n    )\n }\nexport default Home;","import axios from \"axios\";\nconst API_KEY = '6712873235301bd9554e1f93bced51a2';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/' \n\n const getTrending = async() => {\n    \n    try {\n        const result = await axios.get(`${BASE_URL}trending/movie/day`, {\n            params: {\n             api_key: API_KEY\n        }})\n        return result.data;\n    } catch(error) {\n        throw new Error(error.message)\n    }\n}\n\nconst getSearchMovies = async(query) => {\n    try {\n        const result = await axios.get(`${BASE_URL}search/movie`, {\n            params: {\n                query: query,\n             api_key: API_KEY\n        }})\n        return result.data;\n    }\n    catch (error) {\n        throw new Error(error.message)\n    }\n}\n\n const getMovieById = async(id, info = '')  => {\n    \n    try {\n        const result = await axios.get(`${BASE_URL}movie/${id}${info}`, {\n            params: {\n             api_key: API_KEY\n        }})\n        return result.data;\n    } catch(error) {\n        throw new Error(error.message)\n    }\n }\n\nexport const API = {\n    getMovieById,\n    getTrending,\n    getSearchMovies\n }"],"names":["Wrapper","styled","Container","children","List","ListItem","StyledLink","Link","Image","MovieList","movies","from","elements","map","name","title","id","poster_path","to","state","src","alt","useState","trendingFilms","setTrendingFilms","location","useLocation","useEffect","API","then","res","results","catch","err","console","log","message","pathname","API_KEY","BASE_URL","getTrending","axios","params","api_key","result","data","Error","getSearchMovies","query","getMovieById","info"],"sourceRoot":""}