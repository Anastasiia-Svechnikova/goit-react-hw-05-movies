{"version":3,"file":"static/js/703.09287e2b.chunk.js","mappings":"sLAEaA,GAAUC,E,QAAAA,IAAO,UAAPA,CAAH,mF,SCMPC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OACI,SAACH,EAAD,UACKG,GAKZ,C,kICbYC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnBC,EAA0ED,EAA1EC,KAAMC,EAAoEF,EAApEE,MAAOC,EAA6DH,EAA7DG,OAAQC,EAAqDJ,EAArDI,YAAaC,EAAwCL,EAAxCK,aAAcC,EAA0BN,EAA1BM,SAAUC,EAAgBP,EAAhBO,aAEzDC,EAAkBL,EAAOM,KAAI,gBAAGR,EAAH,EAAGA,KAAMS,EAAT,EAASA,GAAT,OAAkB,wBAAcT,GAALS,EAA3B,IAEnC,OACI,iCACI,4BACI,0BACI,gBAAKC,IAAG,yCAAoCP,GAAeQ,IAAKX,GAAQC,OAE5E,4BACI,0BAAKD,GAAQC,GAAM,2CAAaK,EAAaM,MAAM,EAAG,GAAnC,YACnB,wCAAiBC,KAAKC,MAAqB,GAAfV,GAA5B,QACA,sCACA,uBAAKC,KACL,oCACA,wBACKE,WAIb,4BACI,4CACA,2BACI,yBACI,SAAC,KAAD,CAAOQ,GAAG,OAAV,qBAEJ,yBAAI,SAAC,KAAD,CAAOA,GAAG,UAAV,8BAGZ,SAAC,EAAAC,SAAD,CAAUC,UAAU,6CAApB,UACA,SAAC,KAAD,QAKX,E,UCGD,EArCqB,WAAO,IAAD,IACvB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOnB,EAAP,KAAcoB,EAAd,KACA,GAAwCD,EAAAA,EAAAA,UAAS,IAAjD,eAAOE,EAAP,KAAqBC,EAArB,KACA,GAA4BH,EAAAA,EAAAA,UAAS,QAArC,eAAOI,EAAP,KAAeC,EAAf,KAEQd,GAAOe,EAAAA,EAAAA,MAAPf,GACFgB,GAAWC,EAAAA,EAAAA,MAsBjB,OArBAC,QAAQC,IAAIH,GACZE,QAAQC,IAAInB,IAEZoB,EAAAA,EAAAA,YAAU,WAENC,EAAAA,EAAAA,aAAiBrB,GAAIsB,MAAK,SAACC,GACvBL,QAAQC,IAAII,GACZb,EAASa,GACTT,EAAU,WACb,IAAEU,OAAM,SAACC,GACNb,EAAgB,2BAChBE,EAAU,YACVI,QAAQC,IAAIM,EAAIC,QACnB,GAKJ,GAAE,CAAC1B,KAIA,UAACb,EAAA,EAAD,YACI,SAAC,KAAD,CAAMmB,GAAE,oBAAEU,EAASW,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,UAAlC,qBACY,aAAXf,IAAyB,SAACxB,EAAD,CAAWC,MAAOA,IAChC,aAAXuB,IAAyB,uBAAIF,MAIzC,C,2GCzCKkB,EAAU,mCAEVC,EAAW,gCAEVC,EAAW,mCAAG,6GAGQC,IAAAA,IAAA,UAAaF,EAAb,sBAA2C,CAC5DG,OAAQ,CACPC,QAASL,KALD,cAGPM,EAHO,yBAONA,EAAOC,MAPD,sCASP,IAAIC,MAAM,KAAMX,SATT,yDAAH,qDAaZY,EAAe,mCAAG,WAAMC,GAAN,gGAEKP,IAAAA,IAAA,UAAaF,EAAb,gBAAqC,CACtDG,OAAQ,CACJM,MAAOA,EACVL,QAASL,KALE,cAEVM,EAFU,yBAOTA,EAAOC,MAPE,sCAUV,IAAIC,MAAM,KAAMX,SAVN,yDAAH,sDAcdc,EAAY,mCAAG,WAAMxC,GAAN,4FAAUyC,EAAV,+BAAiB,GAAjB,kBAGOT,IAAAA,IAAA,UAAaF,EAAb,iBAA8B9B,GAA9B,OAAmCyC,GAAQ,CAC5DR,OAAQ,CACPC,QAASL,KALA,cAGRM,EAHQ,yBAOPA,EAAOC,MAPA,sCASR,IAAIC,MAAM,KAAMX,SATR,yDAAH,sDAaNL,EAAM,CACfmB,aAAAA,EACAT,YAAAA,EACAO,gBAAAA,E","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Movie-item/Movie-item.jsx","pages/Movie-details.jsx","services/api.services.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled(\"section\")   `\n    padding: 20px 30px;\n    background-color: aliceblue;\n`","\n// import styled from \"styled-components\";\n\n// const Wrapper = styled(\"section\")   `\n//     padding: 20px 30px;\n// `\nimport { Wrapper } from \"./Container.styled\"\n\nexport const Container = ({ children }) => {\n    return (\n        <Wrapper>\n            {children}\n\n        </Wrapper>\n        \n    )\n}","import { Link, Outlet } from 'react-router-dom';\nimport { Suspense } from \"react\";\n\nexport const MovieItem = ({ movie }) => {\n  const {name, title, genres, poster_path, vote_average, overview, release_date} = movie\n\n    const extractedGenres = genres.map(({ name, id }) => <li key={id}>{name}</li>)\n    \n    return (\n        <>\n            <div>\n                <div>\n                    <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={name || title}/>\n                </div>\n                <div>\n                    <h2>{name || title}<span> { `(${release_date.slice(0, 4)})`}</span></h2>\n                    <p>User Score: { Math.floor(vote_average * 10)}%</p>\n                    <h3>Overview</h3>\n                    <p>{ overview}</p>\n                    <h3>Genres</h3>\n                    <ul>\n                        {extractedGenres}\n                    </ul>\n                </div>\n            </div>\n            <div>\n                <p>Additional info</p>\n                <ul>\n                    <li>\n                        <Link  to=\"cast\">Cast</Link>\n                    </li>\n                    <li><Link  to=\"reviews\">Reviews</Link></li>\n                </ul>\n            </div>\n            <Suspense fallback={<div>Loading page...</div>}>\n            <Outlet/>\n            </Suspense>\n            \n</>\n    )\n}","import { useState, useEffect } from \"react\";\nimport { useParams, useLocation, Link } from \"react-router-dom\";\nimport { API } from \"services/api.services\";\nimport { MovieItem } from \"components/Movie-item/Movie-item\";\nimport { Container } from \"components/Container/Container\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [status, setStatus] = useState('idle');\n    \n    const { id } = useParams();\n    const location = useLocation();\n    console.log(location)\n    console.log(id)\n\n    useEffect(() => {\n\n        API.getMovieById(id).then((res) => {\n            console.log(res)\n            setMovie(res)\n            setStatus('resolved')\n        }).catch((err) => {\n            setErrorMessage(\"Oops, smth went wrong..\")\n            setStatus('rejected')\n            console.log(err.message)\n        })\n\n        \n\n\n    }, [id])\n    \n\n    return (\n        <Container>\n            <Link to={location.state?.from ?? '/movies' }>Go back</Link>\n            {status === 'resolved' && <MovieItem movie={movie} />}\n            {status === 'rejected' && <p>{errorMessage}</p>}\n        </Container>\n        \n    )\n}\nexport default MovieDetails;","import axios from \"axios\";\nconst API_KEY = '6712873235301bd9554e1f93bced51a2';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/' \n\n const getTrending = async() => {\n    \n    try {\n        const result = await axios.get(`${BASE_URL}trending/movie/day`, {\n            params: {\n             api_key: API_KEY\n        }})\n        return result.data;\n    } catch(error) {\n        throw new Error(error.message)\n    }\n}\n\nconst getSearchMovies = async(query) => {\n    try {\n        const result = await axios.get(`${BASE_URL}search/movie`, {\n            params: {\n                query: query,\n             api_key: API_KEY\n        }})\n        return result.data;\n    }\n    catch (error) {\n        throw new Error(error.message)\n    }\n}\n\n const getMovieById = async(id, info = '')  => {\n    \n    try {\n        const result = await axios.get(`${BASE_URL}movie/${id}${info}`, {\n            params: {\n             api_key: API_KEY\n        }})\n        return result.data;\n    } catch(error) {\n        throw new Error(error.message)\n    }\n }\n\nexport const API = {\n    getMovieById,\n    getTrending,\n    getSearchMovies\n }"],"names":["Wrapper","styled","Container","children","MovieItem","movie","name","title","genres","poster_path","vote_average","overview","release_date","extractedGenres","map","id","src","alt","slice","Math","floor","to","Suspense","fallback","useState","setMovie","errorMessage","setErrorMessage","status","setStatus","useParams","location","useLocation","console","log","useEffect","API","then","res","catch","err","message","state","from","API_KEY","BASE_URL","getTrending","axios","params","api_key","result","data","Error","getSearchMovies","query","getMovieById","info"],"sourceRoot":""}