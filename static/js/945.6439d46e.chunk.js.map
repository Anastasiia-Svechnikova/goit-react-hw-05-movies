{"version":3,"file":"static/js/945.6439d46e.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Movie-item/Movie-item.styled.js","components/Movie-item/Movie-item.jsx","pages/Movie-details.jsx","services/api.services.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled(\"section\")   `\n    padding: 20px 30px;\n`","\n// import styled from \"styled-components\";\n\n// const Wrapper = styled(\"section\")   `\n//     padding: 20px 30px;\n// `\nimport { Wrapper } from \"./Container.styled\"\n\nexport const Container = ({ children }) => {\n    return (\n        <Wrapper>\n            {children}\n\n        </Wrapper>\n        \n    )\n}","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled('div')`\ndisplay: flex;\ngap: 30px;\n\n`\nexport const Thumb = styled('div')`\nwidth: 30%;\n\n`\nexport const Poster = styled('img')`\nwidth: 100%;\n`\nexport const Description = styled('div')`\nwidth: 70%;\n`\nexport const GenresItem = styled('li')`\npadding: 4px;\nfont-size: 13px;\ncolor: white;\nbackground-color: #952f2f;\nborder-radius: 2px;\n`\nexport const MovieNav = styled('ul')`\ndisplay: flex;\ngap:50px;\npadding:20px 0;\nmargin: 0;\n\nlist-style: none;\n\n`\nexport const NavWrapper = styled('div')`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\n\nfont-size: 15px;\nborder-bottom: 1px solid black;\nborder-top: 1px solid black;\nbackground-color: #fff;\n\n`\nexport const MovieLink = styled(Link)`\nfont-size: 20px;\ncolor: #952f2f;\ntext-decoration: none;\n\n`\nexport const BackLink = styled(Link)`\npadding: 7px;\ndisplay: block;\nfont-size: 14px;\ncolor: #952f2f;\ntext-decoration: none;\n\n`\nexport const GenresList = styled('ul')`\nlist-style: none;\ndisplay: inline-flex;\ngap: 10px;\n`\nexport const GenresTitle = styled('h3')`\n\ndisplay: inline;\n`\n\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { Suspense } from \"react\";\nimport { Wrapper, Poster, Thumb, Description, GenresTitle, GenresList, GenresItem, MovieNav, NavWrapper, MovieLink, BackLink } from './Movie-item.styled';\nimport { Container } from 'components/Container/Container';\n\nexport const MovieItem = ({ movie }) => {\n\n    const location = useLocation();\n    console.log(location)\n    const {name, title, genres, poster_path, vote_average, overview, release_date} = movie\n\n    const extractedGenres = genres.map(({ name, id }) => <GenresItem key={id}>{name}</GenresItem>)\n    \n    return (\n        <>\n            <Container>\n                 <BackLink to={location.state?.from ?? '/movies' }>Go back</BackLink>\n                <Wrapper>\n                <Thumb>\n                    <Poster src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={name || title}/>\n                </Thumb>\n                <Description>\n                    <h2>{name || title}<span> { `(${release_date.slice(0, 4)})`}</span></h2>\n                    <p>User Score: { Math.floor(vote_average * 10)}%</p>\n                    <h3>Overview</h3>\n                    <p>{ overview}</p>\n                    <GenresTitle>Genres:</GenresTitle>\n                    <GenresList>\n                        {extractedGenres}\n                    </GenresList>\n                </Description>\n                </Wrapper>\n            </Container>\n            \n            <NavWrapper>\n                <MovieNav>\n                    <li>\n                        <MovieLink  to=\"cast\">Cast</MovieLink>\n                    </li>\n                    <li><MovieLink  to=\"reviews\">Reviews</MovieLink></li>\n                </MovieNav>\n            </NavWrapper>\n            <Suspense fallback={<div>Loading page...</div>}>\n            <Outlet/>\n            </Suspense>\n            \n</>\n    )\n}","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { API } from \"services/api.services\";\nimport { MovieItem } from \"components/Movie-item/Movie-item\";\n// import { Container } from \"components/Container/Container\";\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [status, setStatus] = useState('idle');\n    \n    const { moviesId } = useParams();\n\n    console.log(moviesId)\n\n    useEffect(() => {\n\n        API.getMovieById(moviesId).then((res) => {\n            console.log(res)\n            setMovie(res)\n            setStatus('resolved')\n        }).catch((err) => {\n            setErrorMessage(\"Oops, smth went wrong..\")\n            setStatus('rejected')\n            console.log(err.message)\n        })\n\n        \n\n\n    }, [moviesId])\n    \n\n    return (\n        <>\n           \n            {status === 'resolved' && <MovieItem movie={movie} />}\n            {status === 'rejected' && <p>{errorMessage}</p>}\n        </>\n        \n    )\n}\nexport default MovieDetails;","import axios from \"axios\";\nconst API_KEY = '6712873235301bd9554e1f93bced51a2';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/' \n\n const getTrending = async() => {\n    \n    try {\n        const result = await axios.get(`${BASE_URL}trending/movie/day`, {\n            params: {\n             api_key: API_KEY\n        }})\n        return result.data;\n    } catch(error) {\n        throw new Error(error.message)\n    }\n}\n\nconst getSearchMovies = async(query) => {\n    try {\n        const result = await axios.get(`${BASE_URL}search/movie`, {\n            params: {\n                query: query,\n             api_key: API_KEY\n        }})\n        return result.data;\n    }\n    catch (error) {\n        throw new Error(error.message)\n    }\n}\n\n const getMovieById = async(id, info = '')  => {\n    \n    try {\n        const result = await axios.get(`${BASE_URL}movie/${id}${info}`, {\n            params: {\n             api_key: API_KEY\n        }})\n        return result.data;\n    } catch(error) {\n        throw new Error(error.message)\n    }\n }\n\nexport const API = {\n    getMovieById,\n    getTrending,\n    getSearchMovies\n }"],"names":["Wrapper","styled","Container","children","Thumb","Poster","Description","GenresItem","MovieNav","NavWrapper","MovieLink","Link","BackLink","GenresList","GenresTitle","MovieItem","movie","location","useLocation","console","log","name","title","genres","poster_path","vote_average","overview","release_date","extractedGenres","map","id","to","state","from","src","alt","slice","Math","floor","Suspense","fallback","useState","setMovie","errorMessage","setErrorMessage","status","setStatus","moviesId","useParams","useEffect","API","then","res","catch","err","message","API_KEY","BASE_URL","getTrending","axios","params","api_key","result","data","Error","getSearchMovies","query","getMovieById","info"],"sourceRoot":""}