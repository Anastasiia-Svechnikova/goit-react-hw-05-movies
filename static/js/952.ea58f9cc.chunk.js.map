{"version":3,"file":"static/js/952.ea58f9cc.chunk.js","mappings":"kQAEaA,GAAWC,EAAAA,EAAAA,IAAO,KAAPA,CAAH,2CAGRC,GAAYD,EAAAA,EAAAA,IAAO,MAAPA,CAAH,uCAGTE,GAAMF,EAAAA,EAAAA,IAAO,KAAPA,CAAH,qJ,SCPHG,EAAW,SAAC,GAAc,IAE7BC,EAF4B,EAAXC,KAEDC,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,GAAlC,OAEtB,UAACX,EAAD,WACKS,IAAgB,SAACP,EAAD,CAAWU,IAAG,yCAAoCH,GAAgBI,IAAKH,KACxF,uBAAIA,KACJ,uCAAgBF,OAHLG,EAFO,IAS1B,OACI,SAACR,EAAD,UACKE,GAGZ,ECuBD,EAjCc,WACV,OAAwBS,EAAAA,EAAAA,UAAS,MAAjC,eAAOR,EAAP,KAAaS,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACI,GAAwCH,EAAAA,EAAAA,UAAS,IAAjD,eAAOI,EAAP,KAAqBC,EAArB,KACIC,GAAaC,EAAAA,EAAAA,MAAbD,SAqBR,OApBAE,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WAENC,EAAAA,EAAAA,aAAiBL,EAAU,YAAYM,MAAK,SAACC,GACzCZ,EAAQY,EAAIrB,MACZW,EAAU,WACb,IAAEW,OAAM,SAACC,GACNV,EAAgB,2BAChBF,EAAU,YACVK,QAAQC,IAAIM,EAAIC,QACnB,GAKJ,GAAE,CAACV,IAERE,QAAQC,IAAIjB,IAGJ,UAACyB,EAAA,EAAD,WACgB,aAAXf,IAAyB,SAACZ,EAAD,CAAUE,KAAMA,IAC9B,aAAXU,IAAyB,uBAAIE,MAIxC,C,sECrCWc,GAAU/B,E,QAAAA,IAAO,UAAPA,CAAH,iD,SCMP8B,EAAY,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACxB,OACI,SAACD,EAAD,UACKC,GAKZ,C,2GCfKC,EAAU,mCAEVC,EAAW,gCAEVC,EAAW,mCAAG,6GAGQC,IAAAA,IAAA,UAAaF,EAAb,sBAA2C,CAC5DG,OAAQ,CACPC,QAASL,KALD,cAGPM,EAHO,yBAONA,EAAOC,MAPD,sCASP,IAAIC,MAAM,KAAMZ,SATT,yDAAH,qDAaZa,EAAe,mCAAG,WAAMC,GAAN,gGAEKP,IAAAA,IAAA,UAAaF,EAAb,gBAAqC,CACtDG,OAAQ,CACJM,MAAOA,EACVL,QAASL,KALE,cAEVM,EAFU,yBAOTA,EAAOC,MAPE,sCAUV,IAAIC,MAAM,KAAMZ,SAVN,yDAAH,sDAcde,EAAY,mCAAG,WAAMlC,GAAN,4FAAUmC,EAAV,+BAAiB,GAAjB,kBAGOT,IAAAA,IAAA,UAAaF,EAAb,iBAA8BxB,GAA9B,OAAmCmC,GAAQ,CAC5DR,OAAQ,CACPC,QAASL,KALA,cAGRM,EAHQ,yBAOPA,EAAOC,MAPA,sCASR,IAAIC,MAAM,KAAMZ,SATR,yDAAH,sDAaNL,EAAM,CACfoB,aAAAA,EACAT,YAAAA,EACAO,gBAAAA,E","sources":["components/Cast/CastList.styled.js","components/Cast/CastList.jsx","components/Cast/Cast.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","services/api.services.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastItem = styled('li')`\nlist-style: none;\n`\nexport const CastImage = styled('img')`\nwidth: 120px;\n`\nexport const Lis = styled('ul')`\npadding: 0;\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr 1fr;\ngap: 10px;\n\ntext-align: center;\nfont-size: 11px;\n\n`\n\n","import { CastItem, CastImage, Lis } from \"./CastList.styled\"\nexport const CastList = ({ cast }) => {\n    \n    const elements = cast.map(({ character, profile_path, name, id }) => (\n        \n        <CastItem key={id}>\n            {profile_path && <CastImage src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt={name} />}\n            <p>{name}</p>\n            <p>Character: { character}</p>\n        </CastItem>)\n        )\n    \n    return (\n        <Lis>\n            {elements}\n        </Lis>\n    )\n}","import { useState, useEffect } from \"react\";\nimport { API } from \"services/api.services\";\nimport { useParams } from \"react-router-dom\";\nimport { Container } from \"components/Container/Container\";\nimport { CastList } from \"components/Cast/CastList\";\n\n\n const Cast = () => {\n    const [cast, setCast] = useState(null);\n    const [status, setStatus] = useState('idle');\n        const [errorMessage, setErrorMessage] = useState('');\n    const { moviesId } = useParams()\n    console.log(moviesId)\n\n    useEffect(() => {\n\n        API.getMovieById(moviesId, '/credits').then((res) => {\n            setCast(res.cast)\n            setStatus('resolved')\n        }).catch((err) => {\n            setErrorMessage(\"Oops, smth went wrong..\")\n            setStatus('rejected')\n            console.log(err.message)\n        })\n\n        \n\n\n    }, [moviesId])\n\nconsole.log(cast)\n\n    return (\n        <Container>\n            {status === 'resolved' && <CastList cast={cast} />}\n            {status === 'rejected' && <p>{errorMessage}</p>}\n        </Container>\n        \n    )\n }\nexport default Cast;","import styled from \"styled-components\";\n\nexport const Wrapper = styled(\"section\")   `\n    padding: 20px 30px;\n`","\n// import styled from \"styled-components\";\n\n// const Wrapper = styled(\"section\")   `\n//     padding: 20px 30px;\n// `\nimport { Wrapper } from \"./Container.styled\"\n\nexport const Container = ({ children }) => {\n    return (\n        <Wrapper>\n            {children}\n\n        </Wrapper>\n        \n    )\n}","import axios from \"axios\";\nconst API_KEY = '6712873235301bd9554e1f93bced51a2';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/' \n\n const getTrending = async() => {\n    \n    try {\n        const result = await axios.get(`${BASE_URL}trending/movie/day`, {\n            params: {\n             api_key: API_KEY\n        }})\n        return result.data;\n    } catch(error) {\n        throw new Error(error.message)\n    }\n}\n\nconst getSearchMovies = async(query) => {\n    try {\n        const result = await axios.get(`${BASE_URL}search/movie`, {\n            params: {\n                query: query,\n             api_key: API_KEY\n        }})\n        return result.data;\n    }\n    catch (error) {\n        throw new Error(error.message)\n    }\n}\n\n const getMovieById = async(id, info = '')  => {\n    \n    try {\n        const result = await axios.get(`${BASE_URL}movie/${id}${info}`, {\n            params: {\n             api_key: API_KEY\n        }})\n        return result.data;\n    } catch(error) {\n        throw new Error(error.message)\n    }\n }\n\nexport const API = {\n    getMovieById,\n    getTrending,\n    getSearchMovies\n }"],"names":["CastItem","styled","CastImage","Lis","CastList","elements","cast","map","character","profile_path","name","id","src","alt","useState","setCast","status","setStatus","errorMessage","setErrorMessage","moviesId","useParams","console","log","useEffect","API","then","res","catch","err","message","Container","Wrapper","children","API_KEY","BASE_URL","getTrending","axios","params","api_key","result","data","Error","getSearchMovies","query","getMovieById","info"],"sourceRoot":""}